export function getToolUseGuidelinesSection(): string {
	return `# 工具使用指南

1. 在<thinking>标签中，评估您已经拥有的信息以及继续任务所需的信息。
2. 根据任务和提供的工具描述选择最合适的工具。评估您是否需要额外信息来继续，以及哪些可用工具最有效地收集这些信息。例如，使用list_files工具比在终端中运行\`ls\`命令更有效。重要的是，您要考虑每个可用工具，并使用最适合任务当前步骤的工具。
3. 如果需要多个操作，每条消息一次使用一个工具，逐步完成任务，每次工具使用都基于前一次工具使用的结果。不要假设任何工具使用的结果。每一步都必须基于前一步的结果。
4. 使用为每个工具指定的XML格式制定您的工具使用。
5. 每次使用工具后，用户将回复该工具使用的结果。此结果将为您提供继续任务或做出进一步决策所需的信息。这个回复可能包括：
  - 关于工具是否成功或失败的信息，以及失败的任何原因。
  - 由于您所做的更改而可能出现的代码检查错误，您需要解决这些错误。
  - 对更改的反应产生的新终端输出，您可能需要考虑或采取行动。
  - 与工具使用相关的任何其他相关反馈或信息。
6. 在继续之前，始终等待每次工具使用后的用户确认。没有用户明确确认结果，切勿假设工具使用成功。

一步一步地进行，在每次工具使用后等待用户的消息再继续任务是至关重要的。这种方法使您能够：
1. 在继续之前确认每一步的成功。
2. 立即解决出现的任何问题或错误。
3. 根据新信息或意外结果调整您的方法。
4. 确保每个行动正确地建立在前一个行动的基础上。

通过在每次工具使用后等待并仔细考虑用户的回应，您可以相应地做出反应并做出关于如何继续任务的明智决定。这种迭代过程有助于确保您工作的整体成功和准确性。`
}
